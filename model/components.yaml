# Software running on the smart car.
car_app:
  functionalities: # Functions that are always present, in any state:
    - steering
    - location_service_car
    - personal_sdp
    - direct_communication
  starting_state: urban
  states:
    - name: urban
      transitions: # Possible transitions to other states and conditions under
        - to: rural # they happen
          condition: sensor_count < sc_threshold && closest_edge_distance > ced_threshold
    - name: rural
      functionalities: # Additional functions that are specific to this state:
        - environment_sdp
      transitions:
        - to: urban
          condition: sensor_count > sc_threshold || closest_edge_distance < ced_threshold

# The application running on client smartphones.
client_app:
  functionalities:
    - route_display
  starting_state: autonomous
  states:
    - name: autonomous
      functionalities:
        - location_service_client
        - cloud_communication
      transitions:
        - to: riding
          condition: communication.input.transition_to_riding
    - name: riding
      functionalities:
        - direct_communication
      transitions:
        - to: autonomous
          condition: communication.input.transition_to_autonomous

# This stands for software running on any smart city sensor, since the
# distinctions between them are not substantial at this level of modeling.
sensor_firmware:
  functionalities:
    - sensor_service

# This component runs on edge servers, collecting and processing data from
# smart city sensors.
sensing_server:
  functionalities:
    - environment_sdp

# The following components are microservices of which the server side of the
# application is composed. Each of them executes strictly one functionality.
# They are running in the center of the cloud (see datacenter hardware node).

matching_server:
  functionalities:
    - matching_service

communication_server:
  functionalities:
    - mediation_service

route_calculation_server_car:
  functionalities:
    - route_calculation_car

route_calculation_server_client:
  functionalities:
    - route_calculation_car